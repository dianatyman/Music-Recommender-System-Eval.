{"ast":null,"code":"var _jsxFileName = \"/Users/dianatyman/Desktop/music-recom-eval/src/CBased/CBased.js\";\nimport './CBased.css';\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CBased extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userName: '',\n      token: '',\n      songName: [],\n      songNames: [],\n      songID: [],\n      limit: 10\n    };\n  }\n\n  getData(accessToken) {\n    fetch('https://api.spotify.com/v1/me/top/tracks?limit=10', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()) // .then(data => this.setState(state => {\n    //   //data.items.map(i => state.userData.push(!i.name))\n    //   //console.log(data);\n    //   data.items.map(function(i){\n    //     if (!state.songName.includes(i.name) && !state.songID.includes(i.id)){\n    //       state.songName.push(i.name);\n    //       state.songID.push(i.id);\n    //     }\n    //     return state.songName && state.songID;\n    //   })\n    // }))\n    .then(data => this.setState({\n      songNames: data.items\n    })); // Check if it retreives song name and id correctly\n\n    console.log(this.state.songName); //console.log(this.state.songID);\n  }\n\n  getUserData(accessToken) {\n    // Fetch User's profile information\n    fetch('https://api.spotify.com/v1/me', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken\n      }\n    }).then(response => response.json()).then(data => this.setState({\n      userName: data.display_name\n    }));\n  }\n\n  componentDidMount() {\n    const url = new URL(window.location.href);\n    const accessToken = url.searchParams.get('access_token'); //console.log(accessToken);\n\n    this.setState({\n      token: accessToken\n    });\n\n    if (accessToken) {\n      this.getUserData(accessToken);\n      this.getData(accessToken);\n    }\n\n    ;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CB\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          'fontSize': '35px',\n          'marginTop': '5px'\n        },\n        children: \"Content Based Reccommendation!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          'fontSize': '15px',\n          'marginTop': '5px'\n        },\n        children: \"User top songs: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: this.state.songNames.name\n        }, this.state.songName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default CBased;","map":{"version":3,"sources":["/Users/dianatyman/Desktop/music-recom-eval/src/CBased/CBased.js"],"names":["React","Component","CBased","constructor","state","userName","token","songName","songNames","songID","limit","getData","accessToken","fetch","method","headers","then","response","json","data","setState","items","console","log","getUserData","display_name","componentDidMount","url","URL","window","location","href","searchParams","get","render","name"],"mappings":";AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA8B;AAE7BE,EAAAA,WAAW,GAAG;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAC,EADE;AAEXC,MAAAA,KAAK,EAAC,EAFK;AAGXC,MAAAA,QAAQ,EAAC,EAHE;AAIXC,MAAAA,SAAS,EAAC,EAJC;AAKXC,MAAAA,MAAM,EAAC,EALI;AAMXC,MAAAA,KAAK,EAAC;AANK,KAAb;AAQD;;AAEDC,EAAAA,OAAO,CAAEC,WAAF,EAAe;AACpBC,IAAAA,KAAK,CAAC,mDAAD,EAAsD;AACzDC,MAAAA,MAAM,EAAE,KADiD;AAEzDC,MAAAA,OAAO,EAAE;AAAC,yBAAiB,YAAYH,WAA9B;AACC,wBAAgB;AADjB;AAFgD,KAAtD,CAAL,CAIGI,IAJH,CAIQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJpB,EAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA,KAgBCF,IAhBD,CAgBMG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAC3BZ,MAAAA,SAAS,EAAEW,IAAI,CAACE;AADW,KAAd,CAhBd,EADoB,CAqBpB;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWG,QAAvB,EAtBoB,CAuBpB;AACD;;AAEDiB,EAAAA,WAAW,CAACZ,WAAD,EAAa;AACvB;AACCC,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,MAAAA,MAAM,EAAE,KAD6B;AAErCC,MAAAA,OAAO,EAAE;AAAC,yBAAiB,YAAYH;AAA9B;AAF4B,KAAlC,CAAL,CAGGI,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHpB,EAICF,IAJD,CAIMG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAC1Bf,MAAAA,QAAQ,EAAEc,IAAI,CAACM;AADW,KAAd,CAJd;AAOD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,QAAP,CAAgBC,IAAxB,CAAZ;AACA,UAAMnB,WAAW,GAAGe,GAAG,CAACK,YAAJ,CAAiBC,GAAjB,CAAqB,cAArB,CAApB,CAFkB,CAGrB;;AACA,SAAKb,QAAL,CAAc;AACNd,MAAAA,KAAK,EAAEM;AADD,KAAd;;AAIG,QAAGA,WAAH,EAAe;AACd,WAAKY,WAAL,CAAiBZ,WAAjB;AACE,WAAKD,OAAL,CAAaC,WAAb;AACF;;AAAA;AAEF;;AAEFsB,EAAAA,MAAM,GAAG;AAEL,wBACE;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA,8BACE;AAAI,QAAA,KAAK,EAAE;AAAC,sBAAY,MAAb;AAAoB,uBAAa;AAAjC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,KAAK,EAAE;AAAC,sBAAY,MAAb;AAAoB,uBAAa;AAAjC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAA,+BACE;AAAA,oBAEE,KAAK9B,KAAL,CAAWI,SAAX,CAAqB2B;AAFvB,WAAS,KAAK/B,KAAL,CAAWG,QAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBA;;AApFyB;;AAuF9B,eAAeL,MAAf","sourcesContent":["import './CBased.css';\nimport React, {Component} from \"react\";\n\nclass CBased extends Component{\n\n\tconstructor() {\n    super();\n    this.state = {\n      userName:'',\n      token:'',\n      songName:[],\n      songNames:[],\n      songID:[],\n      limit:10\n    }\n  }\n\n  getData (accessToken) {\n    fetch('https://api.spotify.com/v1/me/top/tracks?limit=10', {\n      method: 'GET',\n      headers: {'Authorization': 'Bearer ' + accessToken,\n                'Content-Type': 'application/json',}\n    }).then(response => response.json())\n    // .then(data => this.setState(state => {\n    //   //data.items.map(i => state.userData.push(!i.name))\n    //   //console.log(data);\n    //   data.items.map(function(i){\n    //     if (!state.songName.includes(i.name) && !state.songID.includes(i.id)){\n    //       state.songName.push(i.name);\n    //       state.songID.push(i.id);\n    //     }\n    //     return state.songName && state.songID;\n    //   })\n    // }))\n    .then(data => this.setState({\n    \tsongNames: data.items\n    }));\n\n    // Check if it retreives song name and id correctly\n    console.log(this.state.songName);\n    //console.log(this.state.songID);\n  }\n\n  getUserData(accessToken){\n  \t// Fetch User's profile information\n    fetch('https://api.spotify.com/v1/me', {\n      method: 'GET',\n      headers: {'Authorization': 'Bearer ' + accessToken}\n    }).then(response => response.json())\n    .then(data => this.setState({\n      userName: data.display_name\n    }));\n  }\n\n  componentDidMount() {\n    const url = new URL(window.location.href);\n    const accessToken = url.searchParams.get('access_token');\n\t//console.log(accessToken);\n\tthis.setState({\n        \ttoken: accessToken\n    });\n\n    if(accessToken){\n    \tthis.getUserData(accessToken);\n      \tthis.getData(accessToken);\n    };\n\n  }\n\n\trender() {\n\n    \treturn(\n     \t\t<div className=\"CB\">\n      \t\t\t<h1 style={{'fontSize': '35px','marginTop': '5px' }}>Content Based Reccommendation!</h1>\n      \t\t\t<h1 style={{'fontSize': '15px','marginTop': '5px' }}>User top songs: </h1>\n\n      \t\t\t<div>\n      \t\t\t  <li key={this.state.songName}>\n\t      \t\t\t\t{\n\t      \t\t\t\t\t\tthis.state.songNames.name\n\t        \t\t\t}\n        \t\t  </li>\n      \t\t\t</div>\n\n      \t\t</div>\n      \t\t\n     \t);\n    }\n}\n\nexport default CBased;"]},"metadata":{},"sourceType":"module"}