{"ast":null,"code":"var _jsxFileName = \"/Users/dianatyman/Desktop/music-recom-eval/src/Home/Home.js\";\nimport React, { Component } from \"react\";\nimport window from 'global';\nimport querystring from 'querystring';\nimport Button from \"./../components/CustomButtonComponent\";\nimport history from './../history';\nimport \"./Home.css\";\nimport CBased from \"./../CBased/CBased\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fs = require('fs');\n\nconst SpotifyWebApi = require('spotify-web-api-node');\n\nconst spotifyApi = new SpotifyWebApi();\nconst data = {\n  aToken: '',\n  songNames: [],\n  ids: []\n};\nwindow.spotifyData = {\n  aToken: '',\n  songNames: [],\n  ids: []\n};\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showHandler = () => {\n      this.setState({\n        isActive: true\n      });\n    };\n\n    this.state = {\n      userName: '',\n      isActive: false,\n      token: '',\n      songName: [],\n      songID: [],\n      limit: 10\n    };\n  }\n\n  getData(accessToken) {\n    fetch('https://api.spotify.com/v1/me/top/tracks?limit=10', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => this.setState(state => {\n      //data.items.map(i => state.userData.push(!i.name))\n      console.log(data);\n      data.items.map(function (i) {\n        if (!state.songName.includes(i.name) && !state.songID.includes(i.id)) {\n          state.songName.push(i.name);\n          state.songID.push(i.id);\n        }\n\n        return state.songName && state.songID;\n      });\n    })); // Check if it retreives song name and id correctly\n    //console.log(this.state.songName);\n    //console.log(this.state.songID);\n  }\n\n  componentDidMount() {\n    // let parsed = querystring.parse(window.location.search);\n    // let accessToken = parsed.access_token;\n    const url = new URL(window.location.href);\n    const accessToken = url.searchParams.get('access_token');\n    console.log(accessToken); // Fetch User's profile information\n\n    fetch('https://api.spotify.com/v1/me', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken\n      }\n    }).then(response => response.json()).then(data => this.setState({\n      userName: data.display_name\n    }));\n\n    if (accessToken) {\n      this.getData(accessToken);\n    }\n\n    ;\n    this.setState({\n      token: accessToken\n    });\n  }\n\n  // hideHandler = () =>{\n  //     this.setState({\n  //         isActive: false\n  //     })\n  // }\n  render() {\n    // const data = {\n    //   aToken: this.state.token,\n    //   songNames: this.state.songName,\n    //   ids: this.state.songID\n    // };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Home\",\n      children: [this.state.isActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Music Recommendation System Evaluation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Music recommendation system where users can choose which recommendation algorithm they enjoy better. This app is part of my final project for my degree in data science imparted by University Pompeu Fabra.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            'fontSize': '15px',\n            'marginTop': '5px'\n          },\n          children: [\"User name: \", this.state.userName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          border: \"none\",\n          color: \"pink\",\n          height: \"200px\",\n          onClick: () => history.push('/CBased'),\n          radius: \"50%\",\n          width: \"200px\",\n          children: \"Content Based Recommender System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CBased, {\n          songs: this.state.songName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"25%\",\n            display: 'inline-block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          border: \"none\",\n          color: \"#9DC183\",\n          height: \"200px\",\n          onClick: () => history.push('/CollabFiltering'),\n          radius: \"50%\",\n          width: \"200px\",\n          children: \"Collaborative Filtering\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location = 'http://localhost:8888/login',\n        children: \"Sign in with Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.showHandler,\n        children: \"Click here to continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n\n} //export {Home};\n\nconst h = new Home();\nexport { h }; // module.exports = {\n//   functions: Home\n// };","map":{"version":3,"sources":["/Users/dianatyman/Desktop/music-recom-eval/src/Home/Home.js"],"names":["React","Component","window","querystring","Button","history","CBased","fs","require","SpotifyWebApi","spotifyApi","data","aToken","songNames","ids","spotifyData","Home","constructor","props","showHandler","setState","isActive","state","userName","token","songName","songID","limit","getData","accessToken","fetch","method","headers","then","response","json","console","log","items","map","i","includes","name","id","push","componentDidMount","url","URL","location","href","searchParams","get","display_name","render","width","display","h"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,uCAAnB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAEA,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,sBAAD,CAA7B;;AACA,MAAME,UAAU,GAAG,IAAID,aAAJ,EAAnB;AACA,MAAME,IAAI,GAAG;AACPC,EAAAA,MAAM,EAAC,EADA;AAEPC,EAAAA,SAAS,EAAC,EAFH;AAGPC,EAAAA,GAAG,EAAC;AAHG,CAAb;AAKAZ,MAAM,CAACa,WAAP,GAAqB;AACnBH,EAAAA,MAAM,EAAC,EADY;AAEnBC,EAAAA,SAAS,EAAC,EAFS;AAGnBC,EAAAA,GAAG,EAAC;AAHe,CAArB;AAOA,eAAe,MAAME,IAAN,SAAmBf,SAAnB,CAA6B;AAE1CgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA+DnBC,WA/DmB,GA+DL,MAAI;AACd,WAAKC,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAE;AADA,OAAd;AAGH,KAnEkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAC,EADE;AAEXF,MAAAA,QAAQ,EAAC,KAFE;AAGXG,MAAAA,KAAK,EAAC,EAHK;AAIXC,MAAAA,QAAQ,EAAC,EAJE;AAKXC,MAAAA,MAAM,EAAC,EALI;AAMXC,MAAAA,KAAK,EAAC;AANK,KAAb;AAQD;;AAEDC,EAAAA,OAAO,CAAEC,WAAF,EAAe;AACpBC,IAAAA,KAAK,CAAC,mDAAD,EAAsD;AACzDC,MAAAA,MAAM,EAAE,KADiD;AAEzDC,MAAAA,OAAO,EAAE;AAAC,yBAAiB,YAAYH,WAA9B;AACC,wBAAgB;AADjB;AAFgD,KAAtD,CAAL,CAIGI,IAJH,CAIQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJpB,EAKCF,IALD,CAKMtB,IAAI,IAAI,KAAKS,QAAL,CAAcE,KAAK,IAAI;AACnC;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAY1B,IAAZ;AACAA,MAAAA,IAAI,CAAC2B,KAAL,CAAWC,GAAX,CAAe,UAASC,CAAT,EAAW;AACxB,YAAI,CAAClB,KAAK,CAACG,QAAN,CAAegB,QAAf,CAAwBD,CAAC,CAACE,IAA1B,CAAD,IAAoC,CAACpB,KAAK,CAACI,MAAN,CAAae,QAAb,CAAsBD,CAAC,CAACG,EAAxB,CAAzC,EAAqE;AACnErB,UAAAA,KAAK,CAACG,QAAN,CAAemB,IAAf,CAAoBJ,CAAC,CAACE,IAAtB;AACApB,UAAAA,KAAK,CAACI,MAAN,CAAakB,IAAb,CAAkBJ,CAAC,CAACG,EAApB;AACD;;AACD,eAAOrB,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACI,MAA/B;AACD,OAND;AAOD,KAVa,CALd,EADoB,CAkBpB;AACA;AACA;AACD;;AAEDmB,EAAAA,iBAAiB,GAAG;AAClB;AACA;AAEA,UAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQ7C,MAAM,CAAC8C,QAAP,CAAgBC,IAAxB,CAAZ;AACA,UAAMpB,WAAW,GAAGiB,GAAG,CAACI,YAAJ,CAAiBC,GAAjB,CAAqB,cAArB,CAApB;AAEAf,IAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ,EAPkB,CASlB;;AACAC,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,MAAAA,MAAM,EAAE,KAD6B;AAErCC,MAAAA,OAAO,EAAE;AAAC,yBAAiB,YAAYH;AAA9B;AAF4B,KAAlC,CAAL,CAGGI,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHpB,EAICF,IAJD,CAIMtB,IAAI,IAAI,KAAKS,QAAL,CAAc;AAC1BG,MAAAA,QAAQ,EAAEZ,IAAI,CAACyC;AADW,KAAd,CAJd;;AAQA,QAAGvB,WAAH,EAAe;AACb,WAAKD,OAAL,CAAaC,WAAb;AACD;;AAAA;AAED,SAAKT,QAAL,CAAc;AACVI,MAAAA,KAAK,EAAEK;AADG,KAAd;AAID;;AAQD;AACA;AACA;AACA;AACA;AAEAwB,EAAAA,MAAM,GAAG;AAEP;AACA;AACA;AACA;AACA;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,iBAEG,KAAK/B,KAAL,CAAWD,QAAX,gBACC;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE;AAAI,UAAA,KAAK,EAAE;AAAC,wBAAY,MAAb;AAAoB,yBAAa;AAAjC,WAAX;AAAA,oCAAiE,KAAKC,KAAL,CAAWC,QAA5E;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eASE,QAAC,MAAD;AACE,UAAA,MAAM,EAAC,MADT;AAEE,UAAA,KAAK,EAAC,MAFR;AAGE,UAAA,MAAM,EAAG,OAHX;AAIE,UAAA,OAAO,EAAE,MAAMlB,OAAO,CAACuC,IAAR,CAAa,SAAb,CAJjB;AAKE,UAAA,MAAM,EAAG,KALX;AAME,UAAA,KAAK,EAAG,OANV;AAOE,UAAA,QAAQ,EAAG;AAPb;AAAA;AAAA;AAAA;AAAA,gBATF,eAmBE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWG;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAnBF,eAqBE;AAAK,UAAA,KAAK,EAAE;AAAC6B,YAAAA,KAAK,EAAC,KAAP;AAAcC,YAAAA,OAAO,EAAC;AAAtB;AAAZ;AAAA;AAAA;AAAA;AAAA,gBArBF,eAsBE,QAAC,MAAD;AACE,UAAA,MAAM,EAAC,MADT;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,MAAM,EAAG,OAHX;AAIE,UAAA,OAAO,EAAE,MAAMlD,OAAO,CAACuC,IAAR,CAAa,kBAAb,CAJjB;AAKE,UAAA,MAAM,EAAG,KALX;AAME,UAAA,KAAK,EAAG,OANV;AAOE,UAAA,QAAQ,EAAG;AAPb;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAiCU;AAAQ,QAAA,OAAO,EAAE,MAAM1C,MAAM,CAAC8C,QAAP,GAAgB,6BAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCb,eAuCI;AAAQ,QAAA,OAAO,EAAE,KAAK7B,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+CD;;AApIyC,C,CAwI5C;;AACA,MAAMqC,CAAC,GAAG,IAAIxC,IAAJ,EAAV;AACA,SAAQwC,CAAR,G,CACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport window from 'global';\nimport querystring from 'querystring';\nimport Button from \"./../components/CustomButtonComponent\";\nimport history from './../history';\nimport \"./Home.css\";\nimport CBased from \"./../CBased/CBased\";\n\nconst fs = require('fs')\nconst SpotifyWebApi = require('spotify-web-api-node');\nconst spotifyApi = new SpotifyWebApi();\nconst data = {\n      aToken:'',\n      songNames:[],\n      ids:[]\n    };\nwindow.spotifyData = {\n  aToken:'',\n  songNames:[],\n  ids:[]\n};\n\n\nexport default class Home extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName:'',\n      isActive:false,\n      token:'',\n      songName:[],\n      songID:[],\n      limit:10\n    }\n  }\n\n  getData (accessToken) {\n    fetch('https://api.spotify.com/v1/me/top/tracks?limit=10', {\n      method: 'GET',\n      headers: {'Authorization': 'Bearer ' + accessToken,\n                'Content-Type': 'application/json',}\n    }).then(response => response.json())\n    .then(data => this.setState(state => {\n      //data.items.map(i => state.userData.push(!i.name))\n      console.log(data);\n      data.items.map(function(i){\n        if (!state.songName.includes(i.name) && !state.songID.includes(i.id)){\n          state.songName.push(i.name);\n          state.songID.push(i.id);\n        }\n        return state.songName && state.songID;\n      })\n    }));\n\n    // Check if it retreives song name and id correctly\n    //console.log(this.state.songName);\n    //console.log(this.state.songID);\n  }\n\n  componentDidMount() {\n    // let parsed = querystring.parse(window.location.search);\n    // let accessToken = parsed.access_token;\n\n    const url = new URL(window.location.href);\n    const accessToken = url.searchParams.get('access_token');\n\n    console.log(accessToken);\n\n    // Fetch User's profile information\n    fetch('https://api.spotify.com/v1/me', {\n      method: 'GET',\n      headers: {'Authorization': 'Bearer ' + accessToken}\n    }).then(response => response.json())\n    .then(data => this.setState({\n      userName: data.display_name\n    }));\n\n    if(accessToken){\n      this.getData(accessToken);\n    };\n\n    this.setState({\n        token: accessToken\n    });\n\n  }\n\n  showHandler = ()=>{\n      this.setState({\n          isActive: true\n      })\n  }\n\n  // hideHandler = () =>{\n  //     this.setState({\n  //         isActive: false\n  //     })\n  // }\n\n  render() {\n\n    // const data = {\n    //   aToken: this.state.token,\n    //   songNames: this.state.songName,\n    //   ids: this.state.songID\n    // };\n\n    return (\n      <div className=\"Home\">\n\n        {this.state.isActive ? \n          <div>\n            <h1>Music Recommendation System Evaluation</h1>\n            <p>\n              Music recommendation system where users can choose which recommendation algorithm they enjoy better. \n              This app is part of my final project for my degree in data science imparted by University Pompeu Fabra.\n            </p>\n\n            <h1 style={{'fontSize': '15px','marginTop': '5px' }}>User name: {this.state.userName} </h1>\n\n            <Button\n              border=\"none\"\n              color=\"pink\"\n              height = \"200px\"\n              onClick={() => history.push('/CBased')}\n              radius = \"50%\"\n              width = \"200px\"\n              children = \"Content Based Recommender System\"\n            />\n\n            <CBased songs={this.state.songName} />\n\n            <div style={{width:\"25%\", display:'inline-block'}}/>\n            <Button\n              border=\"none\"\n              color=\"#9DC183\"\n              height = \"200px\"\n              onClick={() => history.push('/CollabFiltering')}\n              radius = \"50%\"\n              width = \"200px\"\n              children = \"Collaborative Filtering\"\n            />\n\n          </div> : <button onClick={() => window.location='http://localhost:8888/login' }>Sign in with Spotify</button>                                                                      \n\n          } \n\n          <button onClick={this.showHandler}>Click here to continue</button>\n\n          {/* arreglar esto, esconder el botón o cambiarlo para que funcione con el api */}\n\n    </div>\n    \n    );\n  }\n\n}\n\n//export {Home};\nconst h = new Home();\nexport {h};\n// module.exports = {\n//   functions: Home\n// };\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}