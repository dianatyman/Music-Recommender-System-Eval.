{"ast":null,"code":"var _jsxFileName = \"/Users/dianatyman/Desktop/music-recom-eval/src/CFiltering/CollabFiltering.js\";\nimport './CollabFiltering.css';\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CollabFiltering extends Component {\n  constructor() {\n    super();\n    this.state = {\n      song_name: [],\n      album_img: [],\n      audio: [],\n      artist: []\n    };\n  }\n\n  componentDidMount() {\n    let userName = this.props.userName;\n    let token = this.props.token;\n    const playID_Disc = [];\n    const playID_collab = [];\n    fetch(\"https://api.spotify.com/v1/users/\" + userName + \"/playlists?limit=50\", {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(response => response.json()).then(data => {\n      data.items.map(playlist => {\n        if (playlist.name == \"Descubrimiento semanal\" || playlist.name == \"Discover Weekly\") {\n          playID_Disc.push(playlist.id);\n        }\n\n        if (playlist.collaborative) {\n          playID_collab.push(playlist.id);\n        }\n      }); // Get Discover Weekly Collab Filtering Recomm's\n\n      if (playID_Disc.length > 0) {\n        playID_Disc.map(playlist => {\n          fetch(\"https://api.spotify.com/v1/playlists/\" + playlist + \"/tracks?market=ES&limit=20\", {\n            method: 'GET',\n            headers: {\n              'Authorization': 'Bearer ' + token\n            }\n          }).then(response => response.json()).then(data => {\n            data.items.track.map(dts => {\n              this.setState({\n                song_name: dts.name,\n                album_img: dts.album.images[2].url,\n                audio: dts.preview_url,\n                artist: dts.artists[0].name\n              });\n            });\n          });\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CF\",\n      children: Object.keys(this.state.song_name).map(index => {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: this.state.audio[index],\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.state.album_img[index],\n              style: {\n                width: '60px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), \" \", this.state.song_name[index] + \" - \" + this.state.artist[index], \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 145\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n} //const CB = new CollabFiltering();\n\n\nexport default CollabFiltering; //export default CB;","map":{"version":3,"sources":["/Users/dianatyman/Desktop/music-recom-eval/src/CFiltering/CollabFiltering.js"],"names":["React","Component","CollabFiltering","constructor","state","song_name","album_img","audio","artist","componentDidMount","userName","props","token","playID_Disc","playID_collab","fetch","method","headers","then","response","json","data","items","map","playlist","name","push","id","collaborative","length","track","dts","setState","album","images","url","preview_url","artists","render","Object","keys","index","width"],"mappings":"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","sourcesContent":["import './CollabFiltering.css';\nimport React, {Component} from \"react\";\n\nclass CollabFiltering extends Component{\n\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tsong_name:[],\n\t\t\talbum_img:[],\n\t\t\taudio:[],\n\t\t\tartist:[]\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tlet userName = this.props.userName\n\t\tlet token = this.props.token\n\n\t\tconst playID_Disc = []\n\t\tconst playID_collab = []\n\n\t\tfetch(\"https://api.spotify.com/v1/users/\" + userName + \"/playlists?limit=50\", {\n\t\t      \tmethod: 'GET',\n\t\t      \theaders: {'Authorization': 'Bearer ' + token}\n\t\t    }).then(response => response.json())\n\t\t    .then(data => {\n\t\t    \tdata.items.map(playlist => {\n\t\t    \t\tif(playlist.name == \"Descubrimiento semanal\" || playlist.name == \"Discover Weekly\"){\n\t\t    \t\t\tplayID_Disc.push(playlist.id)\n\t\t    \t\t}\n\n\t\t    \t\tif(playlist.collaborative){\n\t\t    \t\t\tplayID_collab.push(playlist.id)\n\t\t    \t\t}\n\t\t    \t\t\n\t\t    \t});\n\n\t\t    \t// Get Discover Weekly Collab Filtering Recomm's\n\t\t    \tif(playID_Disc.length > 0){\n\t\t    \t\tplayID_Disc.map(playlist => {\n\t\t    \t\t\tfetch(\"https://api.spotify.com/v1/playlists/\" + playlist + \"/tracks?market=ES&limit=20\", {\n\t\t    \t\t\t\tmethod: 'GET',\n\t\t      \t\t\t\theaders: {'Authorization': 'Bearer ' + token}\n\t\t    \t\t\t}).then(response => response.json())\n\t\t    \t\t\t.then(data => {\n\t\t    \t\t\t\tdata.items.track.map(dts =>{\n\t\t    \t\t\t\t\tthis.setState({\n\t\t    \t\t\t\t\t\tsong_name: dts.name,\n\t\t    \t\t\t\t\t\talbum_img: dts.album.images[2].url,\n\t\t    \t\t\t\t\t\taudio: dts.preview_url,\n\t\t    \t\t\t\t\t\tartist: dts.artists[0].name\n\t\t    \t\t\t\t\t})\n\t\t    \t\t\t\t})\n\t\t    \t\t\t})\n\t\t    \t\t})\n\t\t    \t}\n\t\t    \t\n\t\t    \t\n\n\t\t    });\n\t}\n\n\trender() {\n     return(\n      <div className=\"CF\">\n      \t{\n        Object.keys(this.state.song_name).map(index =>{\n          return (\n            <ul>\n              <a href={this.state.audio[index]} target={\"_blank\"} rel=\"noreferrer\">\n              <img src={this.state.album_img[index]} style={{width: '60px'}}/> {this.state.song_name[index] + \" - \" + this.state.artist[index]} <br />\n              </a>\n            </ul>\n          )\n        })\n      }\n      </div>\n     );\n    }\n}\n\n//const CB = new CollabFiltering();\nexport default CollabFiltering;\n//export default CB;"]},"metadata":{},"sourceType":"module"}