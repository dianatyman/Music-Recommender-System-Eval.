{"ast":null,"code":"var _jsxFileName = \"/Users/dianatyman/Desktop/music-recom-eval/src/CBased/CBased.js\";\nimport './CBased.css';\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CBased extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userName: '',\n      token: '',\n      songName: [],\n      songID: [],\n      limit: 10\n    };\n  }\n\n  getData(accessToken) {\n    fetch('https://api.spotify.com/v1/me/top/tracks?limit=10', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => this.setState(state => {\n      //data.items.map(i => state.userData.push(!i.name))\n      //console.log(data);\n      data.items.map(function (i) {\n        if (!state.songName.includes(i.name) && !state.songID.includes(i.id)) {\n          state.songName.push(i.name);\n          state.songID.push(i.id);\n        }\n\n        return state.songName && state.songID;\n      });\n    })); // Check if it retreives song name and id correctly\n    //console.log(this.state.songName);\n    //console.log(this.state.songID);\n  }\n\n  getUserData(accessToken) {\n    // Fetch User's profile information\n    fetch('https://api.spotify.com/v1/me', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken\n      }\n    }).then(response => response.json()).then(data => this.setState({\n      userName: data.display_name\n    }));\n  }\n\n  componentDidMount() {\n    const url = new URL(window.location.href);\n    const accessToken = url.searchParams.get('access_token'); //console.log(accessToken);\n\n    this.setState({\n      token: accessToken\n    });\n\n    if (accessToken) {\n      this.getUserData(accessToken);\n      this.getData(accessToken);\n    }\n\n    ;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CB\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          'fontSize': '35px',\n          'marginTop': '5px'\n        },\n        children: \"Content Based Reccommendation!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          'fontSize': '15px',\n          'marginTop': '5px'\n        },\n        children: \"User top songs: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 10\n      }, this), this.state.songName.map(item => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", item, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 45\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default CBased;","map":{"version":3,"sources":["/Users/dianatyman/Desktop/music-recom-eval/src/CBased/CBased.js"],"names":["React","Component","CBased","constructor","state","userName","token","songName","songID","limit","getData","accessToken","fetch","method","headers","then","response","json","data","setState","items","map","i","includes","name","id","push","getUserData","display_name","componentDidMount","url","URL","window","location","href","searchParams","get","render","item"],"mappings":"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","sourcesContent":["import './CBased.css';\nimport React, {Component} from \"react\";\n\nclass CBased extends Component{\n\n\tconstructor() {\n    super();\n    this.state = {\n      userName:'',\n      token:'',\n      songName:[],\n      songID:[],\n      limit:10\n    }\n  }\n\n  getData (accessToken) {\n    fetch('https://api.spotify.com/v1/me/top/tracks?limit=10', {\n      method: 'GET',\n      headers: {'Authorization': 'Bearer ' + accessToken,\n                'Content-Type': 'application/json',}\n    }).then(response => response.json())\n    .then(data => this.setState(state => {\n      //data.items.map(i => state.userData.push(!i.name))\n      //console.log(data);\n      data.items.map(function(i){\n        if (!state.songName.includes(i.name) && !state.songID.includes(i.id)){\n          state.songName.push(i.name);\n          state.songID.push(i.id);\n        }\n        return state.songName && state.songID;\n      })\n    }));\n\n    // Check if it retreives song name and id correctly\n    //console.log(this.state.songName);\n    //console.log(this.state.songID);\n  }\n\n  getUserData(accessToken){\n  \t// Fetch User's profile information\n    fetch('https://api.spotify.com/v1/me', {\n      method: 'GET',\n      headers: {'Authorization': 'Bearer ' + accessToken}\n    }).then(response => response.json())\n    .then(data => this.setState({\n      userName: data.display_name\n    }));\n  }\n\n  componentDidMount() {\n    const url = new URL(window.location.href);\n    const accessToken = url.searchParams.get('access_token');\n\t//console.log(accessToken);\n\tthis.setState({\n        \ttoken: accessToken\n    });\n\n    if(accessToken){\n    \tthis.getUserData(accessToken);\n      \tthis.getData(accessToken);\n    };\n\n  }\n\n\trender() {\n\n    \treturn(\n     \t\t<div className=\"CB\">\n      \t\t\t<h1 style={{'fontSize': '35px','marginTop': '5px' }}>Content Based Reccommendation!</h1>\n      \t\t\t<h1 style={{'fontSize': '15px','marginTop': '5px' }}>User top songs: </h1>\n      \t\t\t\n      \t\t\t{\n      \t\t\t\tthis.state.songName.map((item) => <span> {item} </span>)\n      \t\t\t}\n      \t\t\t\n      \t\t</div>\n     \t);\n    }\n}\n\nexport default CBased;"]},"metadata":{},"sourceType":"module"}