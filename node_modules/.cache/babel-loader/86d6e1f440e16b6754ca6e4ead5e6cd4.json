{"ast":null,"code":"// import React, { Component } from \"react\";\n// import window from 'global';\n// import querystring from 'querystring';\n// import Button from \"./../components/CustomButtonComponent\";\n// import history from './../history';\n// import \"./Home.css\";\n// import CBased from \"./../CBased/CBased\";\n// const fs = require('fs')\n// const SpotifyWebApi = require('spotify-web-api-node');\n// const spotifyApi = new SpotifyWebApi();\n// export default class Home extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       userName:'',\n//       isActive:false,\n//       token:'',\n//       songName:[],\n//       songID:[],\n//       limit:10\n//     }\n//   }\n//   getData (accessToken) {\n//     fetch('https://api.spotify.com/v1/me/top/tracks?limit=' + this.state.limit, {\n//       method: 'GET',\n//       headers: {'Authorization': 'Bearer ' + accessToken,\n//                 'Content-Type': 'application/json',}\n//     }).then(response => response.json())\n//     .then(data => this.setState(state => {\n//       //data.items.map(i => state.userData.push(!i.name))\n//       //console.log(data);\n//       data.items.map(function(i){\n//         if (!state.songName.includes(i.name) && !state.songID.includes(i.id)){\n//           state.songName.push(i.name);\n//           state.songID.push(i.id);\n//         }\n//         return state.songName && state.songID;\n//       })\n//     }));\n//     // Check if it retreives song name and id correctly\n//     //console.log(this.state.songName);\n//     //console.log(this.state.songID);\n//   }\n//   componentDidMount() {\n//     // let parsed = querystring.parse(window.location.search);\n//     // let accessToken = parsed.access_token;\n//     const url = new URL(window.location.href);\n//     const accessToken = url.searchParams.get('access_token');\n//     //console.log(accessToken);\n//     //Fetch User's profile information\n//     fetch('https://api.spotify.com/v1/me', {\n//       method: 'GET',\n//       headers: {'Authorization': 'Bearer ' + accessToken}\n//     }).then(response => response.json())\n//     .then(data => this.setState({\n//       userName: data.display_name\n//     }));\n//     if(accessToken){\n//       this.getData(accessToken);\n//     };\n//     this.setState({\n//         token: accessToken\n//     });\n//   }\n//   showHandler = ()=>{\n//       this.setState({\n//           isActive: true\n//       })\n//   }\n//   // hideHandler = () =>{\n//   //     this.setState({\n//   //         isActive: false\n//   //     })\n//   // }\n//   render() {\n//     return (\n//       <div className=\"Home\">\n//         {this.state.isActive ? \n//           <div>\n//             <h1>Music Recommendation System Evaluation</h1>\n//             <p>\n//               Music recommendation system where users can choose which recommendation algorithm they enjoy better. \n//               This app is part of my final project for my degree in data science imparted by University Pompeu Fabra.\n//             </p>\n//             <h1 style={{'fontSize': '15px','marginTop': '5px' }}>User name: {this.state.userName} </h1>\n//             <Button\n//               border=\"none\"\n//               color=\"pink\"\n//               height = \"200px\"\n//               onClick={() => history.push('/CBased' + '/?access_token=' + this.state.token)}\n//               radius = \"50%\"\n//               width = \"200px\"\n//               children = \"Content Based Recommender System\"\n//             />\n//             <div style={{width:\"25%\", display:'inline-block'}}/>\n//             <Button\n//               border=\"none\"\n//               color=\"#9DC183\"\n//               height = \"200px\"\n//               onClick={() => history.push('/CollabFiltering' + '/?access_token=' + this.state.token)}\n//               radius = \"50%\"\n//               width = \"200px\"\n//               children = \"Collaborative Filtering\"\n//             />\n//           </div> : <button onClick={() => window.location='http://localhost:8888/login' }>Sign in with Spotify</button>                                                                      \n//           } \n//           <button onClick={this.showHandler}>Click here to continue</button>\n//           {/* arreglar esto, esconder el botón o cambiarlo para que funcione con el api */}\n//     </div>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/Users/dianatyman/Desktop/music-recom-eval/src/Home/Home.js"],"names":[],"mappingssourcesContent":["// import React, { Component } from \"react\";\n// import window from 'global';\n// import querystring from 'querystring';\n// import Button from \"./../components/CustomButtonComponent\";\n// import history from './../history';\n// import \"./Home.css\";\n// import CBased from \"./../CBased/CBased\";\n\n// const fs = require('fs')\n// const SpotifyWebApi = require('spotify-web-api-node');\n// const spotifyApi = new SpotifyWebApi();\n\n// export default class Home extends Component {\n\n//   constructor() {\n//     super();\n//     this.state = {\n//       userName:'',\n//       isActive:false,\n//       token:'',\n//       songName:[],\n//       songID:[],\n//       limit:10\n//     }\n//   }\n\n//   getData (accessToken) {\n//     fetch('https://api.spotify.com/v1/me/top/tracks?limit=' + this.state.limit, {\n//       method: 'GET',\n//       headers: {'Authorization': 'Bearer ' + accessToken,\n//                 'Content-Type': 'application/json',}\n//     }).then(response => response.json())\n//     .then(data => this.setState(state => {\n//       //data.items.map(i => state.userData.push(!i.name))\n//       //console.log(data);\n//       data.items.map(function(i){\n//         if (!state.songName.includes(i.name) && !state.songID.includes(i.id)){\n//           state.songName.push(i.name);\n//           state.songID.push(i.id);\n//         }\n//         return state.songName && state.songID;\n//       })\n//     }));\n\n//     // Check if it retreives song name and id correctly\n//     //console.log(this.state.songName);\n//     //console.log(this.state.songID);\n//   }\n\n//   componentDidMount() {\n//     // let parsed = querystring.parse(window.location.search);\n//     // let accessToken = parsed.access_token;\n\n//     const url = new URL(window.location.href);\n//     const accessToken = url.searchParams.get('access_token');\n\n//     //console.log(accessToken);\n\n//     //Fetch User's profile information\n//     fetch('https://api.spotify.com/v1/me', {\n//       method: 'GET',\n//       headers: {'Authorization': 'Bearer ' + accessToken}\n//     }).then(response => response.json())\n//     .then(data => this.setState({\n//       userName: data.display_name\n//     }));\n\n//     if(accessToken){\n//       this.getData(accessToken);\n//     };\n\n//     this.setState({\n//         token: accessToken\n//     });\n\n//   }\n\n//   showHandler = ()=>{\n//       this.setState({\n//           isActive: true\n//       })\n//   }\n\n//   // hideHandler = () =>{\n//   //     this.setState({\n//   //         isActive: false\n//   //     })\n//   // }\n\n//   render() {\n\n//     return (\n//       <div className=\"Home\">\n\n//         {this.state.isActive ? \n//           <div>\n//             <h1>Music Recommendation System Evaluation</h1>\n//             <p>\n//               Music recommendation system where users can choose which recommendation algorithm they enjoy better. \n//               This app is part of my final project for my degree in data science imparted by University Pompeu Fabra.\n//             </p>\n\n//             <h1 style={{'fontSize': '15px','marginTop': '5px' }}>User name: {this.state.userName} </h1>\n\n//             <Button\n//               border=\"none\"\n//               color=\"pink\"\n//               height = \"200px\"\n//               onClick={() => history.push('/CBased' + '/?access_token=' + this.state.token)}\n//               radius = \"50%\"\n//               width = \"200px\"\n//               children = \"Content Based Recommender System\"\n//             />\n\n//             <div style={{width:\"25%\", display:'inline-block'}}/>\n//             <Button\n//               border=\"none\"\n//               color=\"#9DC183\"\n//               height = \"200px\"\n//               onClick={() => history.push('/CollabFiltering' + '/?access_token=' + this.state.token)}\n//               radius = \"50%\"\n//               width = \"200px\"\n//               children = \"Collaborative Filtering\"\n//             />\n\n//           </div> : <button onClick={() => window.location='http://localhost:8888/login' }>Sign in with Spotify</button>                                                                      \n\n//           } \n\n//           <button onClick={this.showHandler}>Click here to continue</button>\n\n//           {/* arreglar esto, esconder el botón o cambiarlo para que funcione con el api */}\n\n//     </div>\n    \n//     );\n//   }\n\n// }\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}