{"ast":null,"code":"var _jsxFileName = \"/Users/dianatyman/Desktop/music-recom-eval/src/App.js\";\nimport './App.css';\nimport React, { Component } from \"react\";\nimport Button from \"./components/CustomButtonComponent\";\nimport history from './history';\nimport Routes from './Routes';\nimport CBased from \"./CBased/CBased\";\nimport CFiltering from \"./CFiltering/CollabFiltering\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport update from 'react-addons-update';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showHandler = () => {\n      this.setState({\n        isActive: true\n      });\n    };\n\n    this.state = {\n      token: '',\n      dataAudio: [],\n      isActive: false,\n      userName: '',\n      songName: [],\n      songID: [],\n      artistID: [],\n      genres: [],\n      audio_feat: [],\n      limit: 10 // cambiar le limit a 50!\n\n    };\n  }\n\n  getUserData(accessToken) {\n    // Fetch User's profile information\n    fetch('https://api.spotify.com/v1/me', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken\n      }\n    }).then(response => response.json()).then(data => this.setState({\n      userName: data.display_name\n    }));\n  }\n\n  getSongID(accessToken) {\n    // Fetch User's most listened/top songs + songs id's\n    fetch('https://api.spotify.com/v1/me/top/tracks?limit=' + this.state.limit, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken\n      }\n    }).then(response => response.json()).then(res => {\n      const datas = res.items;\n      const id = [];\n      const ids = datas.map(datas => {\n        if (!id.includes(datas.id)) {\n          id.push(datas.id);\n        }\n\n        ;\n        return id;\n      });\n      this.setState({\n        songID: ids\n      });\n    });\n  }\n\n  getAudioFeat(songIDS, accessToken) {\n    // Get audio analysis features from the user's songs\n    fetch('https://api.spotify.com/v1/audio-features?ids=' + songIDS, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken\n      }\n    }).then(response => response.json()).then(data => console.log(data)); //console.log(\"...................\");\n    //console.log(this.state.songData);\n  }\n\n  componentDidMount() {\n    const url = new URL(window.location.href);\n    const accessToken = url.searchParams.get('access_token');\n    this.setState({\n      token: accessToken\n    });\n\n    if (!accessToken) {\n      return;\n    } // Fetch User's profile information\n\n\n    fetch('https://api.spotify.com/v1/me', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken\n      }\n    }).then(response => response.json()).then(data => this.setState({\n      userName: data.display_name\n    })); // Fetch User's most listened/top songs + songs id's\n\n    fetch('https://api.spotify.com/v1/me/top/tracks?limit=' + this.state.limit, {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken\n      }\n    }).then(response => response.json()).then(data => {\n      let id = [];\n      let ids = data.items.map(datas => {\n        if (!id.includes(datas.id)) {\n          id.push(datas.id);\n        }\n\n        ;\n        return id;\n      });\n      this.setState({\n        songID: ids\n      });\n    }); // Fetch User's top 3 artists -- nedeed for spotify's api content based recommendations\n\n    fetch('https://api.spotify.com/v1/me/top/artists?limit=3', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data.items);\n      let id = [];\n      let gen = [];\n      let ids = data.items.map(datas => {\n        if (!id.includes(datas.id)) {\n          id.push(datas.id);\n        }\n\n        ;\n        return id;\n      });\n      let genre = data.items.map(datas => {\n        if (!gen.includes(datas.genres)) {\n          gen.push(datas.genres);\n        }\n\n        ;\n        console.log(gen.flat());\n        this.setState({\n          genres: gen.flat()\n        });\n        return gen;\n      });\n      this.setState({\n        artistID: ids\n      });\n    }); // if(accessToken){\n    // \tthis.getUserData(accessToken);\n    //  \t\tthis.getSongID(accessToken);\n    //  \t\tthis.getAudioFeat(this.state.songID.toString(), accessToken)\n    //  \t};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), this.state.isActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"App-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Music Recommendation System Evaluation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Music recommendation system where users can choose which recommendation algorithm they enjoy better. This app is part of my final project for my degree in data science imparted by University Pompeu Fabra.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            'fontSize': '25px',\n            'marginTop': '5px',\n            'textAlign': 'left',\n            'border': '3px solid #9DC183',\n            'padding': '10px'\n          },\n          children: [\"Content Based Recommendations for \", this.state.userName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(CBased, {\n          songID: this.state.songID.toString(),\n          token: this.state.token,\n          artistID: this.state.artistID.toString(),\n          genres: this.state.genres\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            'fontSize': '25px',\n            'marginTop': '5px',\n            'textAlign': 'left',\n            'border': '3px solid #9DC183',\n            'padding': '10px'\n          },\n          children: [\"Collaborative Filtering Recommendations for \", this.state.userName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 10\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location = 'http://localhost:8888/login',\n        children: \"Sign in with Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: !this.state.isActive && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.showHandler,\n          children: \"Click here to continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  }\n\n} //<button onClick={this.showHandler}>Click here to continue</button>\n\n\nexport default App;","map":{"version":3,"sources":["/Users/dianatyman/Desktop/music-recom-eval/src/App.js"],"names":["React","Component","Button","history","Routes","CBased","CFiltering","BrowserRouter","Route","Switch","update","App","constructor","props","showHandler","setState","isActive","state","token","dataAudio","userName","songName","songID","artistID","genres","audio_feat","limit","getUserData","accessToken","fetch","method","headers","then","response","json","data","display_name","getSongID","res","datas","items","id","ids","map","includes","push","getAudioFeat","songIDS","console","log","componentDidMount","url","URL","window","location","href","searchParams","get","gen","genre","flat","render","toString"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { Component } from \"react\";\nimport Button from \"./components/CustomButtonComponent\";\nimport history from './history';\nimport Routes from './Routes';\nimport CBased from \"./CBased/CBased\";\nimport CFiltering from \"./CFiltering/CollabFiltering\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport update from 'react-addons-update'; \n\nclass App extends Component {\n\n  \tconstructor(props){\n    \tsuper(props);\n    \tthis.state = {\n      \t\ttoken:'',\n      \t\tdataAudio:[],\n      \t\tisActive:false,\n      \t\tuserName:'',\n      \t\tsongName:[],\n      \t\tsongID:[],\n      \t\tartistID:[],\n      \t\tgenres:[],\n      \t\taudio_feat:[],\n      \t\tlimit:10\t\t\t\t// cambiar le limit a 50!\n    \t}\n  \t}\n\n  \tgetUserData(accessToken){\n  \t\t// Fetch User's profile information\n    \tfetch('https://api.spotify.com/v1/me', {\n      \t\tmethod: 'GET',\n      \t\theaders: {'Authorization': 'Bearer ' + accessToken}\n    \t}).then(response => response.json())\n    \t.then(data => this.setState({\n      \t\tuserName: data.display_name\n    \t}));\n  \t}\n\n  \tgetSongID(accessToken){\n  \t\t// Fetch User's most listened/top songs + songs id's\n\t    fetch('https://api.spotify.com/v1/me/top/tracks?limit=' + this.state.limit, {\n\t      \tmethod: 'GET',\n\t      \theaders: {'Authorization': 'Bearer ' + accessToken}\n\t    }).then(response => response.json())\n\t    .then(res => {\n\t    \tconst datas = res.items\n\t    \tconst id = []\n\t    \tconst ids = datas.map(datas => {\n\t    \t\tif (!id.includes(datas.id)){\n      \t\t\t\tid.push(datas.id)\n\t        \t};\n\t        \treturn id;\n\t    \t})\n\t    \tthis.setState({\n\t    \t\tsongID: ids\n\t    \t})\n\n\t    });\n  \t}\n\n  \tgetAudioFeat(songIDS,accessToken){\n\t    // Get audio analysis features from the user's songs\n\t    fetch('https://api.spotify.com/v1/audio-features?ids=' + songIDS, {\n\t      method: 'GET',\n\t      headers: {'Authorization': 'Bearer ' + accessToken}\n\t    }).then(response => response.json())\n\t    .then(data => console.log(data));\n\t    //console.log(\"...................\");\n\t    //console.log(this.state.songData);\n\n  \t}\n\n  \tcomponentDidMount() {\n    \tconst url = new URL(window.location.href);\n\t\tconst accessToken = url.searchParams.get('access_token');\n\n\t  \tthis.setState({\n        \ttoken: accessToken\n    \t});\n\n    \tif(!accessToken){\n    \t\treturn;\n    \t}\n\n    \t// Fetch User's profile information\n    \tfetch('https://api.spotify.com/v1/me', {\n      \t\tmethod: 'GET',\n      \t\theaders: {'Authorization': 'Bearer ' + accessToken}\n    \t}).then(response => response.json())\n    \t.then(data => this.setState({\n      \t\tuserName: data.display_name\n    \t}));\n\n    \t// Fetch User's most listened/top songs + songs id's\n\t    fetch('https://api.spotify.com/v1/me/top/tracks?limit=' + this.state.limit, {\n\t      \tmethod: 'GET',\n\t      \theaders: {'Authorization': 'Bearer ' + accessToken}\n\t    }).then(response => response.json())\n\t    .then(data => {\n\t    \tlet id = []\n\t    \tlet ids = data.items.map(datas => {\n\t    \t\tif (!id.includes(datas.id)){\n      \t\t\t\tid.push(datas.id)\n\t        \t};\n\t        \treturn id;\n\t    \t})\n\t    \t\n\t    \tthis.setState({\n\t    \t\tsongID: ids\n\t    \t})\n\t    });\n\n\t    // Fetch User's top 3 artists -- nedeed for spotify's api content based recommendations\n\t    fetch('https://api.spotify.com/v1/me/top/artists?limit=3', {\n\t      \tmethod: 'GET',\n\t      \theaders: {'Authorization': 'Bearer ' + accessToken}\n\t    }).then(response => response.json())\n\t    .then(data => {\n\t    \tconsole.log(data.items)\n\t    \tlet id = []\n\t    \tlet gen = []\n\t    \tlet ids = data.items.map(datas => {\n\t    \t\tif (!id.includes(datas.id)){\n      \t\t\t\tid.push(datas.id)\n\t        \t};\n\t        \treturn id;\n\t    \t})\n\n\t    \tlet genre = data.items.map(datas => {\n\t    \t\tif(!gen.includes(datas.genres)){\n\t    \t\t\tgen.push(datas.genres)\n\t    \t\t};\n\t    \t\tconsole.log(gen.flat());\n\t    \t\t\n\t    \t\tthis.setState({\n\t    \t\t\tgenres: gen.flat()\n\t    \t\t})\n\t    \t\treturn gen;\n\t    \t})\n\t    \t\n\t    \tthis.setState({\n\t    \t\tartistID: ids\n\t    \t})\n\n\t    \t\n\t    });\n\n\n    \t// if(accessToken){\n    \t// \tthis.getUserData(accessToken);\n     //  \t\tthis.getSongID(accessToken);\n     //  \t\tthis.getAudioFeat(this.state.songID.toString(), accessToken)\n     //  \t};\n  \t}\n\n\n  \tshowHandler = ()=>{\n      \tthis.setState({\n        \tisActive: true\n      \t})\n  \t}\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Routes />\n        {this.state.isActive ? \n        \t\n        \t<div>\n        \t<header className=\"App-header\">\n\t        <h1>Music Recommendation System Evaluation</h1>\n\t        <p>\n\t          Music recommendation system where users can choose which recommendation algorithm they enjoy better. \n\t          This app is part of my final project for my degree in data science imparted by University Pompeu Fabra.\n\t        </p>\n\t        </header>\n\t        <br />\n\t        <br />\n\t        <h1 style={{'fontSize': '25px','marginTop': '5px', 'textAlign': 'left', 'border': '3px solid #9DC183', 'padding': '10px'}}>Content Based Recommendations for {this.state.userName} </h1>\n\t        <CBased songID={this.state.songID.toString()} token={this.state.token} artistID={this.state.artistID.toString()} genres={this.state.genres}/>\n\t        \n\t        <br />\n\t        <br />\n\t        <h1 style={{'fontSize': '25px','marginTop': '5px', 'textAlign': 'left', 'border': '3px solid #9DC183', 'padding': '10px'}}>Collaborative Filtering Recommendations for {this.state.userName} </h1>\n\n\n\t        </div> : <button onClick={() => window.location='http://localhost:8888/login' }>Sign in with Spotify</button>                                                                      \n\n        } \n        <div>{!this.state.isActive && <button onClick={this.showHandler}>Click here to continue</button>}</div>\n        \n\n      </div> \n     \n    );\n  }\n  \n}\n\n//<button onClick={this.showHandler}>Click here to continue</button>\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}