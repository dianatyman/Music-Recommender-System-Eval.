{"ast":null,"code":"var _jsxFileName = \"/Users/dianatyman/Desktop/music-recom-eval/src/Context/spotifyContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Component, useState, useEffect, useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotifyData = /*#__PURE__*/React.createContext(); //el usuario context\n\nexport function DataProvider(props) {\n  _s();\n\n  const url = new URL(window.location.href);\n  const accessToken = url.searchParams.get('access_token');\n  console.log(accessToken);\n  const userName = '';\n  const songName = [];\n  const songID = []; // Fetch song name and ID\n\n  function getData(accessToken) {\n    fetch('https://api.spotify.com/v1/me/top/tracks?limit=10', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken,\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      data.items.map(function (i) {\n        if (!this.songName.includes(i.name) && !this.songID.includes(i.id)) {\n          this.songName.push(i.name);\n          this.songID.push(i.id);\n        }\n\n        return this.songName && this.songID;\n      });\n    }); // Check if it retreives song name and id correctly\n    //console.log(this.state.songName);\n    //console.log(this.state.songID);\n  }\n\n  function fetchData() {\n    // Fetch User's profile information\n    fetch('https://api.spotify.com/v1/me', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + this.accessToken\n      }\n    }).then(response => response.json()).then(data => this.userName);\n\n    if (accessToken) {\n      this.getData(this.accessToken);\n    }\n\n    ;\n  }\n\n  const value = useMemo(() => {\n    return {\n      accessToken,\n      userName,\n      songName,\n      songID\n    };\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(SpotifyData.Provider, {\n    value: value,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n}\n\n_s(DataProvider, \"tPauEVZ6EeuERV9ttvKTwQ7++Gw=\");\n\n_c = DataProvider;\nexport function useUsuario() {\n  _s2();\n\n  const context = React.useContext(SpotifyData);\n\n  if (!context) {\n    throw new Error('useUsuario debe estar dentro del proveedor SpotifyData');\n  }\n\n  return context;\n}\n\n_s2(useUsuario, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"sources":["/Users/dianatyman/Desktop/music-recom-eval/src/Context/spotifyContext.js"],"names":["React","Component","useState","useEffect","useMemo","SpotifyData","createContext","DataProvider","props","url","URL","window","location","href","accessToken","searchParams","get","console","log","userName","songName","songID","getData","fetch","method","headers","then","response","json","data","items","map","i","includes","name","id","push","fetchData","value","useUsuario","context","useContext","Error"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,EAAgDC,OAAhD,QAA+D,OAA/D;;AAEA,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB,C,CAA2C;;AAE3C,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAAA;;AAClC,QAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,QAAP,CAAgBC,IAAxB,CAAZ;AACG,QAAMC,WAAW,GAAGL,GAAG,CAACM,YAAJ,CAAiBC,GAAjB,CAAqB,cAArB,CAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AAEA,QAAMK,QAAQ,GAAG,EAAjB;AACA,QAAMC,QAAQ,GAAG,EAAjB;AACA,QAAMC,MAAM,GAAG,EAAf,CAP+B,CAS/B;;AACH,WAASC,OAAT,CAAiBR,WAAjB,EAA6B;AAC1BS,IAAAA,KAAK,CAAC,mDAAD,EAAsD;AACzDC,MAAAA,MAAM,EAAE,KADiD;AAEzDC,MAAAA,OAAO,EAAE;AAAC,yBAAiB,YAAYX,WAA9B;AACC,wBAAgB;AADjB;AAFgD,KAAtD,CAAL,CAIGY,IAJH,CAIQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJpB,EAKCF,IALD,CAKMG,IAAI,IAAI;AACZZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACAA,MAAAA,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,UAASC,CAAT,EAAW;AACxB,YAAI,CAAC,KAAKZ,QAAL,CAAca,QAAd,CAAuBD,CAAC,CAACE,IAAzB,CAAD,IAAmC,CAAC,KAAKb,MAAL,CAAYY,QAAZ,CAAqBD,CAAC,CAACG,EAAvB,CAAxC,EAAmE;AACjE,eAAKf,QAAL,CAAcgB,IAAd,CAAmBJ,CAAC,CAACE,IAArB;AACA,eAAKb,MAAL,CAAYe,IAAZ,CAAiBJ,CAAC,CAACG,EAAnB;AACD;;AACD,eAAO,KAAKf,QAAL,IAAiB,KAAKC,MAA7B;AACD,OAND;AAOD,KAdD,EAD0B,CAiB1B;AACA;AACA;AACD;;AAED,WAASgB,SAAT,GAAqB;AACnB;AACAd,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,MAAAA,MAAM,EAAE,KAD6B;AAErCC,MAAAA,OAAO,EAAE;AAAC,yBAAiB,YAAY,KAAKX;AAAnC;AAF4B,KAAlC,CAAL,CAGGY,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHpB,EAICF,IAJD,CAIMG,IAAI,IAAK,KAAKV,QAJpB;;AAMA,QAAGL,WAAH,EAAe;AACb,WAAKQ,OAAL,CAAa,KAAKR,WAAlB;AACD;;AAAA;AAEF;;AAED,QAAMwB,KAAK,GAAGlC,OAAO,CAAC,MAAM;AAC3B,WAAO;AACNU,MAAAA,WADM;AAENK,MAAAA,QAFM;AAGNC,MAAAA,QAHM;AAINC,MAAAA;AAJM,KAAP;AAMA,GAPoB,EAOlB,CAACP,WAAD,CAPkB,CAArB;AASA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEwB,KAA7B;AAAA,OAAwC9B;AAAxC;AAAA;AAAA;AAAA;AAAA,UAAP;AAED;;GAzDeD,Y;;KAAAA,Y;AA4DhB,OAAO,SAASgC,UAAT,GAAsB;AAAA;;AAC5B,QAAMC,OAAO,GAAGxC,KAAK,CAACyC,UAAN,CAAiBpC,WAAjB,CAAhB;;AACA,MAAI,CAACmC,OAAL,EAAa;AACZ,UAAM,IAAIE,KAAJ,CAAU,wDAAV,CAAN;AACA;;AACD,SAAOF,OAAP;AACA;;IANeD,U","sourcesContent":["import React, { Component, useState, useEffect, useMemo } from \"react\";\n\nconst SpotifyData = React.createContext();\t//el usuario context\n\nexport function DataProvider(props){\n\tconst url = new URL(window.location.href);\n    const accessToken = url.searchParams.get('access_token');\n    console.log(accessToken);\n\n    const userName = '';\n    const songName = [];\n    const songID = [];\n\n    // Fetch song name and ID\n\tfunction getData(accessToken){\n    fetch('https://api.spotify.com/v1/me/top/tracks?limit=10', {\n      method: 'GET',\n      headers: {'Authorization': 'Bearer ' + accessToken,\n                'Content-Type': 'application/json',}\n    }).then(response => response.json())\n    .then(data => {\n      console.log(data);\n      data.items.map(function(i){\n        if (!this.songName.includes(i.name) && !this.songID.includes(i.id)){\n          this.songName.push(i.name);\n          this.songID.push(i.id);\n        }\n        return this.songName && this.songID;\n      })\n    });\n\n    // Check if it retreives song name and id correctly\n    //console.log(this.state.songName);\n    //console.log(this.state.songID);\n  }\n\n  function fetchData() {\n    // Fetch User's profile information\n    fetch('https://api.spotify.com/v1/me', {\n      method: 'GET',\n      headers: {'Authorization': 'Bearer ' + this.accessToken}\n    }).then(response => response.json())\n    .then(data => (this.userName: data.display_name));\n\n    if(accessToken){\n      this.getData(this.accessToken);\n    };\n\n  }\n\n  const value = useMemo(() => {\n  \treturn({\n  \t\taccessToken,\n  \t\tuserName,\n  \t\tsongName,\n  \t\tsongID\n  \t})\n  }, [accessToken])\n\n  return <SpotifyData.Provider value={value} {...props} />\n\n}\n\n\nexport function useUsuario() {\n\tconst context = React.useContext(SpotifyData);\n\tif (!context){\n\t\tthrow new Error('useUsuario debe estar dentro del proveedor SpotifyData') \n\t}\n\treturn context;\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}