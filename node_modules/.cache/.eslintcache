[{"/Users/dianatyman/Documents/GitHub/Music-Recommender-System-Eval./src/index.js":"1","/Users/dianatyman/Documents/GitHub/Music-Recommender-System-Eval./src/App.js":"2","/Users/dianatyman/Documents/GitHub/Music-Recommender-System-Eval./src/reportWebVitals.js":"3","/Users/dianatyman/Documents/GitHub/Music-Recommender-System-Eval./src/Routes.js":"4","/Users/dianatyman/Documents/GitHub/Music-Recommender-System-Eval./src/CFiltering/CollabFiltering.js":"5","/Users/dianatyman/Documents/GitHub/Music-Recommender-System-Eval./src/CBased/CBased.js":"6","/Users/dianatyman/Documents/GitHub/Music-Recommender-System-Eval./src/history.js":"7"},{"size":564,"mtime":1620041625513,"results":"8","hashOfConfig":"9"},{"size":5424,"mtime":1623827882854,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1619434625846,"results":"11","hashOfConfig":"9"},{"size":702,"mtime":1623626835966,"results":"12","hashOfConfig":"9"},{"size":8892,"mtime":1623830271359,"results":"13","hashOfConfig":"9"},{"size":6050,"mtime":1623830267669,"results":"14","hashOfConfig":"9"},{"size":84,"mtime":1620039118753,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"1mk9621",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/Users/dianatyman/Documents/GitHub/Music-Recommender-System-Eval./src/index.js",["33"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n       <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["34","35"],"/Users/dianatyman/Documents/GitHub/Music-Recommender-System-Eval./src/App.js",["36"],"import './App.css';\nimport React, { Component } from \"react\";\nimport Routes from './Routes';\nimport CBased from \"./CBased/CBased\";\nimport CFiltering from \"./CFiltering/CollabFiltering\";\n\nclass App extends Component {\n\n  \tconstructor(props){\n    \tsuper(props);\n    \tthis.state = {\n      \t\ttoken:'',\n      \t\tdataAudio:[],\n      \t\tisActive:false,\n      \t\tuserName:'',\n      \t\tsongName:[],\n      \t\tsongID:[],\n      \t\tartistID:[],\n      \t\tgenres:[],\n      \t\taudio_feat:[],\n      \t\tlimit:10\t\t\t\t\n    \t}\n  \t}\n\n  \tcomponentDidMount() {\n    \tconst url = new URL(window.location.href);\n\t\tconst accessToken = url.searchParams.get('access_token');\n\n\t\tif(!accessToken){\n    \t\treturn;\n    \t}else{\n\n\t\t  \tthis.setState({\n\t        \ttoken: accessToken\n\t    \t});\n\n\t    \t// Fetch User's profile information\n\t    \tfetch('https://api.spotify.com/v1/me', {\n\t      \t\tmethod: 'GET',\n\t      \t\theaders: {'Authorization': 'Bearer ' + accessToken}\n\t    \t}).then(response => response.json())\n\t    \t.then(data => this.setState({\n\t      \t\tuserName: data.display_name\n\t    \t}));\n\n\t    \t// Fetch User's most listened/top songs + songs id's\n\t\t    fetch('https://api.spotify.com/v1/me/top/tracks?limit=' + this.state.limit, {\n\t\t      \tmethod: 'GET',\n\t\t      \theaders: {'Accept': 'application/json', 'Content-Type': 'application/json' ,'Authorization': 'Bearer ' + accessToken}\n\t\t    }).then(response => response.json())\n\t\t    .then(data => {\n\t\t    \tif(!data){\n\t\t    \t\treturn;\n\t\t    \t}\n\t\t    \tlet id = [];\n\t\t    \t\n\t\t    \tlet ids = data.items.map(datas => {\n\t\t    \t\tif (!id.includes(datas.id)){\n\t      \t\t\t\tid.push(datas.id)\n\t\t        \t};\n\t\t        \t\n\t\t        \treturn id;\n\t\t    \t})\n\t\t    \tthis.setState({\n\t\t    \t\tsongID: ids[0]\n\t\t    \t})\n\t\t    });\n\n\t\t    // Fetch User's top 3 artists -- nedeed for spotify's api content based recommendations\n\t\t    fetch('https://api.spotify.com/v1/me/top/artists?limit=3', {\n\t\t      \tmethod: 'GET',\n\t\t      \theaders: {'Accept': 'application/json', 'Content-Type': 'application/json' ,'Authorization': 'Bearer ' + accessToken}\n\t\t    }).then(response => response.json())\n\t\t    .then(data => {\n\t\t    \tif(!data){\n\t\t    \t\treturn;\n\t\t    \t}\n\t\t    \t\n\t\t    \tlet id = []\n\t\t    \tlet gen = []\n\t\t    \tlet ids = data.items.map(datas => {\n\t\t    \t\tif (!id.includes(datas.id)){\n\t      \t\t\t\tid.push(datas.id)\n\t\t        \t};\n\n\t\t        \treturn id;\n\t\t    \t})\n\n\t\t    \tlet genre = data.items.map(datas => {\n\t\t    \t\tif(!gen.includes(datas.genres)){\n\t\t    \t\t\tgen.push(datas.genres)\n\t\t    \t\t};\n\n\t\t    \t\tthis.setState({\n\t\t    \t\t\tgenres: gen.flat()\n\t\t    \t\t});\n\n\t\t    \t\treturn gen;\n\t\t    \t})\n\t\t    \t\n\t\t    \tthis.setState({\n\t\t    \t\tartistID: ids[0]\n\t\t    \t})\n\n\t\t    \t\n\t\t    });\n\t\t}\n\n  \t}\n\n\n  \tshowHandler = ()=>{\n      \tthis.setState({\n        \tisActive: true\n      \t})\n  \t}\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Routes />\n        {this.state.isActive ? \n        \t\n        \t<div>\n        \t<header className=\"App-header\">\n\t        <h1>Music Recommendation System Evaluation</h1>\n\t        <p>\n\t          Thank you for taking part of this evaluation {this.state.userName}! \n\t          This is a music recommendation system where you as a user can decide which recommendation algorithm you enjoy better. \n\t          This web-app is part of my final project for my degree in data science imparted by University Pompeu Fabra.\n\t        </p>\n\t        <p> Please Scroll Down </p>\n\t        </header>\n\t        <br />\n\t        <br />\n\t        <h1 style={{'fontSize': '25px','marginTop': '5px', 'textAlign': 'left', 'border': '3px solid #9DC183', 'padding': '10px'}}>Content Based Recommendations for {this.state.userName} </h1>\n\t        <h4>Content Based recommendations uses item features to recommend other songs similar to what you as a user currently like, based on your previous actions or explicit feedback </h4>\n\t        <h4>You can click on the name of the song to hear a snippet of it, unfortunately not all songs may have snippets...</h4>\n\t        <CBased songID={this.state.songID.toString()} token={this.state.token} artistID={this.state.artistID.toString()} genres={this.state.genres.toString()} />\n\t        \n\t        <br />\n\t        <br />\n\t        <h1 style={{'fontSize': '25px','marginTop': '5px', 'textAlign': 'left', 'border': '3px solid #9DC183', 'padding': '10px'}}>Collaborative Filtering Recommendations for {this.state.userName} </h1>\n\t        <h4>Collaborative Filtering recommendations are based from a method of making automatic predictions (filtering) about the interests of a user by collecting preferences from many users, in this case your Spotify friends.</h4>\n\t        <h4>You can click on the name of the song to hear a snippet of it, unfortunately not all songs may have snippets...</h4>\n\t        <CFiltering userName={this.state.userName} token={this.state.token} artistID={this.state.artistID.toString()} genres={this.state.genres.toString()} />\n\n\t        </div> : <button onClick={() => {\n            \t\t\t\twindow.location = window.location.href.includes('localhost') \n              \t\t\t\t? 'http://localhost:8888/login' \n              \t\t\t\t: 'https://music-recommender-eval-backend.herokuapp.com/login' }\n          \t\t\t\t}>Sign in with Spotify</button>                                                                      \n\n        } \n        <div>{!this.state.isActive && <button onClick={this.showHandler}>Click here to continue</button>}</div>\n        \n\n      </div> \n     \n    );\n  }\n  \n}\n\nexport default App;\n","/Users/dianatyman/Documents/GitHub/Music-Recommender-System-Eval./src/reportWebVitals.js",[],"/Users/dianatyman/Documents/GitHub/Music-Recommender-System-Eval./src/Routes.js",[],"/Users/dianatyman/Documents/GitHub/Music-Recommender-System-Eval./src/CFiltering/CollabFiltering.js",["37","38","39","40","41","42","43","44","45","46","47"],"/Users/dianatyman/Documents/GitHub/Music-Recommender-System-Eval./src/CBased/CBased.js",["48","49","50","51"],"/Users/dianatyman/Documents/GitHub/Music-Recommender-System-Eval./src/history.js",[],{"ruleId":"52","severity":1,"message":"53","line":3,"column":27,"nodeType":"54","messageId":"55","endLine":3,"endColumn":33},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"52","severity":1,"message":"60","line":89,"column":12,"nodeType":"54","messageId":"55","endLine":89,"endColumn":17},{"ruleId":"61","severity":1,"message":"62","line":39,"column":32,"nodeType":"63","messageId":"64","endLine":39,"endColumn":34},{"ruleId":"65","severity":1,"message":"66","line":40,"column":26,"nodeType":"67","messageId":"68","endLine":40,"endColumn":28},{"ruleId":"65","severity":1,"message":"66","line":40,"column":71,"nodeType":"67","messageId":"68","endLine":40,"endColumn":73},{"ruleId":"61","severity":1,"message":"62","line":52,"column":34,"nodeType":"63","messageId":"64","endLine":52,"endColumn":36},{"ruleId":"61","severity":1,"message":"62","line":61,"column":31,"nodeType":"63","messageId":"64","endLine":61,"endColumn":33},{"ruleId":"61","severity":1,"message":"62","line":99,"column":36,"nodeType":"63","messageId":"64","endLine":99,"endColumn":38},{"ruleId":"61","severity":1,"message":"62","line":105,"column":30,"nodeType":"63","messageId":"64","endLine":105,"endColumn":32},{"ruleId":"61","severity":1,"message":"62","line":117,"column":53,"nodeType":"63","messageId":"64","endLine":117,"endColumn":55},{"ruleId":"65","severity":1,"message":"66","line":150,"column":42,"nodeType":"67","messageId":"68","endLine":150,"endColumn":44},{"ruleId":"61","severity":1,"message":"62","line":172,"column":43,"nodeType":"63","messageId":"64","endLine":172,"endColumn":45},{"ruleId":"69","severity":1,"message":"70","line":209,"column":18,"nodeType":"71","endLine":209,"endColumn":82},{"ruleId":"61","severity":1,"message":"62","line":52,"column":46,"nodeType":"63","messageId":"64","endLine":52,"endColumn":48},{"ruleId":"65","severity":1,"message":"66","line":83,"column":35,"nodeType":"67","messageId":"68","endLine":83,"endColumn":37},{"ruleId":"61","severity":1,"message":"62","line":105,"column":36,"nodeType":"63","messageId":"64","endLine":105,"endColumn":38},{"ruleId":"69","severity":1,"message":"70","line":136,"column":19,"nodeType":"71","endLine":136,"endColumn":83},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"'genre' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]